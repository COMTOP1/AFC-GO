{{define "title"}}Users{{end}}
{{define "content"}}
    <main class="main" style="text-align: center; justify-content: center; align-content: center; align-items: center;">
        <div class="pageHeaderBanner">
            <h2 class="pageHeader">
                Users
            </h2>
            {{if or (eq .User.Role "Club Secretary") (or (eq .User.Role "Chairperson") (eq .User.Role "Webmaster"))}}
                <div style="margin: 15px 0 15px 0">
                    <a class="button is-info" onclick="addUserModal()">Add User</a>
                </div>
                {{if .Context.Message}}
                    <div class="notification {{.Context.MsgType}}"
                         style="margin-bottom: 0; text-align: center;">{{.Context.Message}}</div>
                {{end}}
                <p id="message" style="color: green"></p>
                <p id="error" style="color: red"></p>
            {{end}}
        </div>

        <table style="align-items: center; display: inline-flex; border-radius: 5px;
        box-shadow: 0 .5em 1em -.125em rgba(10, 10, 10, .1), 0 0 0 1px rgba(10, 10, 10, .02);" class="table is-striped">
            <tr>
                {{if eq .User.Role "Webmaster"}}
                    <th>ID</th>{{end}}
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
                <th>Team</th>
                <th>Role</th>
                <th>Image</th>
                {{if or (eq .User.Role "Club Secretary") (or (eq .User.Role "Chairperson") (eq .User.Role "Webmaster"))}}
                    <th>Edit</th>
                    <th>Delete</th>
                    <th>Reset password</th>
                {{end}}
            </tr>
            {{range .Users}}
                <tr{{if eq $.User.ID .ID}} class="is-selected"{{end}}>
                    {{if eq $.User.Role "Webmaster"}}
                        <th>{{.ID}}
                        </th>{{end}}
                    <th>{{.Name}}
                    </th>
                    <th>{{.Email}}
                    </th>
                    <th>{{.Phone}}
                    </th>
                    {{$team := ""}}
                    {{if ne .TeamID 0}}
                        {{$team = getTeamName .TeamID}}
                    {{else}}
                        {{$team = "Not Related to team"}}
                    {{end}}
                    <th>{{$team}}
                    </th>
                    <th>{{.Role}}
                    </th>
                    <th><img data-src="/download?s=u&id={{.ID}}&r={{randomImgInt}}" alt="/public/AFC.png"
                             onerror="this.onerror=null;this.src='/public/AFC.png';"
                             src="/public/AFC.png"
                             style="border: 5px; max-height: 200px; max-width: 200px;" class="lazy"></th>
                    {{if or (and (eq .Role "Webmaster") (eq $.User.Role "Webmaster")) (and (or (or (eq $.User.Role "Club Secretary") (eq $.User.Role "Chairperson")) (eq $.User.Role "Webmaster")) (ne .Role "Webmaster"))}}
                        <th>
                            <a class="button is-warning"
                               onclick="editUserModal({{.ID}}, {{.Name}}, {{.Email}}, {{.Phone}}, {{.TeamID}}, {{.RoleTemplate}}, {{.IsFileValid}})">Edit</a>
                        </th>
                        <th>
                            <a class="button is-danger" onclick="deleteUserModal({{.ID}}, {{.Name}})">Delete</a>
                        </th>
                        <th>
                            <a class="button is-warning" onclick="resetPasswordModal({{.ID}}, {{.Name}})">Reset password</a>
                        </th>
                    {{end}}
                </tr>
            {{end}}
        </table>
    </main>
    {{if or (eq .User.Role "Club Secretary") (or (eq .User.Role "Chairperson") (eq .User.Role "Webmaster"))}}
        {{template "modal" .}}
    {{end}}
{{end}}

{{define "modal"}}
    <div id="addUserModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title" id="addUserModalTitle">Add User</p>
                            <p>Enter the user details below.<br>
                                Please ensure the email address exists and is set up correctly to forward the
                                new email to the correct person.</p>
                            <form id="addUserForm" enctype="multipart/form-data">
                                <div class="field">
                                    <label class="label" for="addName">Name</label>
                                    <div class="control">
                                        <input
                                                id="addName"
                                                class="input"
                                                type="text"
                                                name="name"
                                                placeholder="Name"
                                        />
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="addEmail">Email</label>
                                    <div class="control">
                                        <input
                                                id="addEmail"
                                                class="input"
                                                type="text"
                                                name="email"
                                                placeholder="Email"
                                        />
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="addPhone">Phone (leave blank if unknown)</label>
                                    <div class="control">
                                        <input
                                                id="addPhone"
                                                class="input"
                                                type="text"
                                                name="phone"
                                                placeholder="Phone"
                                        />
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="addUserRole">Role: </label>
                                    <div class="control has-icons-left select">
                                        <select id="addUserRole" name="role" onclick="addUserModalTeam()"
                                                onmouseup="addUserModalTeam()" onchange="addUserModalTeam()">
                                            <option value="manager" onclick="addUserModalTeam()">Manager</option>
                                            <option value="league_secretary" onclick="addUserModalTeam()">League
                                                secretary
                                            </option>
                                            <option value="club_secretary" onclick="addUserModalTeam()">Club secretary
                                            </option>
                                            <option value="treasurer" onclick="addUserModalTeam()">Treasurer</option>
                                            <option value="safeguarding_officer" onclick="addUserModalTeam()">
                                                Safeguarding officer
                                            </option>
                                            <option value="programme_editor" onclick="addUserModalTeam()">Programme
                                                editor
                                            </option>
                                            <option value="chairperson" onclick="addUserModalTeam()">Chairperson
                                            </option>
                                            {{if or (eq .User.Role "Chairperson") (eq .User.Role "Webmaster")}}
                                                <option value="webmaster" onclick="addUserModalTeam()">Webmaster
                                                </option>
                                            {{end}}
                                        </select>
                                    </div>
                                </div>
                                <div class="field" id="addUserTeamBlock">
                                    <label class="label" for="addUserTeam">Team</label>
                                    <div class="control has-icons-left select">
                                        <select name="userTeam" id="addUserTeam">
                                            <option value="0">No Team</option>
                                            {{range .Teams}}
                                                <option value="{{.ID}}">
                                                    {{.Name}}
                                                </option>
                                            {{end}}
                                        </select>
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="addUserUpload">Image</label>
                                    <div class="file is-info has-name">
                                        <label class="file-label">
                                            <input class="file-input" type="file" accept="image/*" name="upload"
                                                   id="addUserUpload" onchange="addPreviewImage(event)">
                                            <span class="file-cta">
                                            <span class="file-icon">
                                                <i class="fa fa-upload"></i>
                                            </span>
                                            <span class="file-label">Choose a file…</span>
                                        </span>
                                            <span class="file-name" id="addUserUploadName">...</span>
                                        </label>
                                    </div>
                                    <label class="label" for="addPreview">Preview</label>
                                    <img id="addPreview" alt="/public/AFC.png"
                                         onerror="this.onerror=null;this.src='/public/AFC.png';"
                                         src="/public/AFC.png"
                                         style="border: 5px; max-height: 200px; max-width: 200px;">
                                </div>
                                <a class="button is-info" onclick="addUser()" id="addUserButton">
                                    Add User
                                </a>
                            </form>
                            <div id="addUserErrorParent" style="display: none">
                                <br><br>
                                <div class="notification is-danger" id="addUserError"></div>
                            </div>
                        </div>
                    </div>
                </article>
            </div>
        </div>
    </div>
    <div id="editUserModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title" id="editUserModalTitle">Edit User</p>
                            <p>Enter the user details below.</p>
                            <form id="editUserForm" enctype="multipart/form-data">
                                <div class="field">
                                    <label class="label" for="editName">Name</label>
                                    <div class="control">
                                        <input
                                                id="editName"
                                                class="input"
                                                type="text"
                                                name="name"
                                                placeholder="Name"
                                        />
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="editEmail">Email</label>
                                    <div class="control">
                                        <input
                                                id="editEmail"
                                                class="input"
                                                type="text"
                                                name="email"
                                                placeholder="Email"
                                        />
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="editPhone">Phone (leave blank if unknown)</label>
                                    <div class="control">
                                        <input
                                                id="editPhone"
                                                class="input"
                                                type="text"
                                                name="phone"
                                                placeholder="Phone"
                                        />
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="editUserRole">Role: </label>
                                    <div class="control has-icons-left select">
                                        <select id="editUserRole" name="role" onclick="editUserModalTeam()"
                                                onmouseup="editUserModalTeam()" onchange="editUserModalTeam()">
                                            <option value="manager" onclick="editUserModalTeam()">Manager</option>
                                            <option value="league_secretary" onclick="editUserModalTeam()">League
                                                secretary
                                            </option>
                                            <option value="club_secretary" onclick="editUserModalTeam()">Club secretary
                                            </option>
                                            <option value="treasurer" onclick="editUserModalTeam()">Treasurer</option>
                                            <option value="safeguarding_officer" onclick="editUserModalTeam()">
                                                Safeguarding officer
                                            </option>
                                            <option value="programme_editor" onclick="editUserModalTeam()">Programme
                                                editor
                                            </option>
                                            <option value="chairperson" onclick="editUserModalTeam()">Chairperson
                                            </option>
                                            {{if or (eq .User.Role "Chairperson") (eq .User.Role "Webmaster")}}
                                                <option value="webmaster" onclick="editUserModalTeam()">Webmaster
                                                </option>
                                            {{end}}
                                        </select>
                                    </div>
                                </div>
                                <div class="field" id="editUserTeamBlock">
                                    <label class="label" for="editUserTeam">Team</label>
                                    <div class="control has-icons-left select">
                                        <select name="userTeam" id="editUserTeam">
                                            <option value="0">No Team</option>
                                            {{range .Teams}}
                                                <option value="{{.ID}}">
                                                    {{.Name}}
                                                </option>
                                            {{end}}
                                        </select>
                                    </div>
                                </div>
                                <div class="field">
                                    <label class="label" for="editUserUpload">Image</label>
                                    <div class="file is-info has-name">
                                        <label class="file-label">
                                            <input class="file-input" type="file" accept="image/*" name="upload"
                                                   id="editUserUpload" onchange="editPreviewImage(event)">
                                            <span class="file-cta">
                                            <span class="file-icon">
                                                <i class="fa fa-upload"></i>
                                            </span>
                                            <span class="file-label">Choose a file…</span>
                                        </span>
                                            <span class="file-name" id="editUserUploadName">...</span>
                                        </label>
                                    </div>
                                    <label class="label" for="editPreview">Preview</label>
                                    <img id="editPreview" alt="/public/AFC.png"
                                         onerror="this.onerror=null;this.src='/public/AFC.png';"
                                         src="/public/AFC.png"
                                         style="border: 5px; max-height: 200px; max-width: 200px;">
                                    <label class="label" for="removeUserImage">Remove User Image</label>
                                    <div class="control">
                                        <input type="checkbox" id="removeUserImage" name="removeUserImage" value="Y">
                                    </div>
                                </div>
                                <a class="button is-info" onclick="editUser()" id="editUserButton">
                                    Edit User
                                </a>
                            </form>
                            <div id="editUserErrorParent" style="display: none">
                                <br><br>
                                <div class="notification is-danger" id="editUserError"></div>
                            </div>
                        </div>
                    </div>
                </article>
            </div>
        </div>
    </div>
    <div id="resetPasswordModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title" id="resetPasswordModalTitle"></p>
                            <p>An email will be sent to the user for
                                them to reset their password</p>
                            <a class="button is-danger" onclick="resetPassword()" id="resetPasswordButton">
                                Reset password</a>
                        </div>
                    </div>
                </article>
            </div>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>
    <div id="deleteUserModal" class="modal">
        <div class="modal-background"></div>
        <div class="modal-content">
            <div class="box">
                <article class="media">
                    <div class="media-content">
                        <div class="content">
                            <p class="title" id="deleteUserModalTitle"></p>
                            <p>Be careful! Are you sure you want to remove them?</p>
                            <form method="post" id="deleteUserModalForm">
                                <a class="button is-danger" onclick="deleteUser()">Delete User</a>
                            </form>
                        </div>
                    </div>
                </article>
            </div>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
    </div>
    <script>
        let addUserUpload = $('#addUserUpload')
        addUserUpload.change(function () {
            $('#addUserUploadName').text(addUserUpload[0].files[0].name);
        });

        let editUserUpload = $('#editUserUpload')
        editUserUpload.change(function () {
            $('#editUserUploadName').text(editUserUpload[0].files[0].name);
        });

        function addPreviewImage(event) {
            let input = event.target;
            let image = document.getElementById('addPreview');
            if (input.files && input.files[0]) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    image.src = e.target.result;
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function editPreviewImage(event) {
            let input = event.target;
            let image = document.getElementById('editPreview');
            if (input.files && input.files[0]) {
                let reader = new FileReader();
                reader.onload = function (e) {
                    image.src = e.target.result;
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        document.querySelectorAll(
            ".modal-background, .modal-close,.modal-card-head .delete, .modal-card-foot .button"
        ).forEach(($el) => {
            const $modal = $el.closest(".modal");
            $el.addEventListener("click", () => {
                $modal.classList.remove("is-active");
            });
        });

        let editUserID = 0, deleteUserID = 0, resetPasswordUserID = 0;

        function addUserModal() {
            document.getElementById("addUserUpload").value = "";
            $('#addUserUploadName').text("...");
            document.getElementById("addPreview").src = "/public/AFC.png";
            document.getElementById("addUserModal").classList.add("is-active");
        }

        function addUserModalTeam() {
            const role = document.getElementById('addUserRole');
            const team = document.getElementById('addUserTeamBlock');
            const teamBlock = document.getElementById('addUserTeamBlock');
            if (role.value === "manager") {
                teamBlock.style.display = null;
            } else {
                teamBlock.style.display = "none";
                let selectOptions = team.options;

                for (let i = 0; i < selectOptions.length; i++) {
                    if (selectOptions[i].value === "0") {
                        selectOptions[i].selected = 'selected';
                        break
                    }
                }
            }
        }

        function addUser() {
            document.getElementById("addUserErrorParent").style.display = 'none';
            document.getElementById("addUserButton").disabled = true;
            let form = $('#addUserForm')[0];

            // Create an FormData object
            let data = new FormData(form);
            $.ajax({
                url: '/user/add',
                type: 'post',
                dataType: 'json',
                contentType: false,
                processData: false,
                data: data,
                success: function (data) {
                    if (data.error.length > 0) {
                        $("#addUserError").html(data.error);
                        document.getElementById("addUserErrorParent").style.display = null;
                        document.getElementById("addUserButton").disabled = false;
                    } else {
                        window.location.href = "/users";
                    }
                },
            })
        }

        function editUserModal(id, name, email, phone, teamID, role, isFileValid) {
            editUserID = id

            document.getElementById("editName").value = name;

            document.getElementById("editEmail").value = email;

            if (phone !== "No number provided") {
                document.getElementById("editPhone").value = phone;
            } else {
                document.getElementById("editPhone").value = '';
            }

            let teamSelectOptions = document.getElementById("editUserTeam").options;

            for (let i = 0; i < teamSelectOptions.length; i++) {
                if (teamSelectOptions[i].value === teamID.toString()) {
                    teamSelectOptions[i].selected = 'selected';
                    break
                }
            }

            let roleSelectOptions = document.getElementById("editUserRole").options;

            if (role !== "manager") {
                document.getElementById('editUserTeamBlock').style.display = "none"
            }

            for (let i = 0; i < roleSelectOptions.length; i++) {
                if (roleSelectOptions[i].value === role) {
                    roleSelectOptions[i].selected = 'selected';
                    break
                }
            }

            document.getElementById("editPreview").src = "/public/AFC.png";
            document.getElementById("editUserUpload").value = "";
            let editUserUploadName = $('#editUserUploadName');
            editUserUploadName.text("No file");
            if (isFileValid) {
                editUserUploadName.text("Uploaded");
                document.getElementById("editPreview").src = "/download?s=u&id=" + id + "&r=" + Math.floor(Math.random() * 999999);
            }
            document.getElementById("editUserModal").classList.add("is-active");
        }

        function editUserModalTeam() {
            const role = document.getElementById('editUserRole');
            const team = document.getElementById('editUserTeam');
            const teamBlock = document.getElementById('editUserTeamBlock');
            if (role.value === "manager") {
                teamBlock.style.display = null;
            } else {
                teamBlock.style.display = "none";
                let selectOptions = team.options;

                for (let i = 0; i < selectOptions.length; i++) {
                    if (selectOptions[i].value === "0") {
                        selectOptions[i].selected = 'selected';
                        break
                    }
                }
            }
        }

        function editUser() {
            document.getElementById("editUserErrorParent").style.display = 'none';
            document.getElementById("editUserButton").disabled = true;
            let form = $('#editUserForm')[0];

            // Create an FormData object
            let data = new FormData(form);
            $.ajax({
                url: '/user/' + editUserID + '/edit',
                type: 'post',
                dataType: 'json',
                contentType: false,
                processData: false,
                data: data,
                success: function (data) {
                    if (data.error.length > 0) {
                        $("#editUserError").html(data.error);
                        document.getElementById("editUserErrorParent").style.display = null;
                        document.getElementById("editUserButton").disabled = false;
                    } else {
                        window.location.href = "/users";
                    }
                },
            })
        }

        function deleteUserModal(id, name) {
            deleteUserID = id
            document.getElementById("deleteUserModal").classList.add("is-active");
            document.getElementById("deleteUserModalTitle").innerHTML = 'Are you sure you want to delete "' + name + '" from Users?';
        }

        function deleteUser() {
            document.getElementById("deleteUserModalForm").action = "/user/" + deleteUserID + "/delete";
            $('#deleteUserModalForm').submit();
        }

        function resetPasswordModal(id, name) {
            resetPasswordUserID = id;
            document.getElementById("resetPasswordModal").classList.add("is-active");
            document.getElementById("resetPasswordModalTitle").innerHTML = 'Are you sure you want to reset the password of "' + name + '"?';
        }

        function resetPassword() {
            document.getElementById("resetPasswordButton").disabled = true;

            $.ajax({
                url: '/user/' + resetPasswordUserID + '/reset',
                type: 'post',
                dataType: 'json',
                contentType: 'application/x-www-form-urlencoded',
                success: function (data) {
                    document.getElementById("resetPasswordModal").classList.remove("is-active");
                    document.getElementById("resetPasswordButton").disabled = false;
                    $("#message").html(data.message);
                    $("#error").html(data.error);
                },
            })
        }
    </script>
{{end}}